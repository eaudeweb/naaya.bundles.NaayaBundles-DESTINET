<tal:block define="selection_list here/get_market_place_types">
<metal:block use-macro="here/widget_macro/macros/widget">
    <metal:block fill-slot="scripts">
     <script>
        function init_select_widget(config) {
            $(function(){
                var prop_id = config['prop_id'];
                var tree_data_json;
                $('#'+ prop_id).hide();
                $('label[for='+ prop_id+']').css({'display': 'none'});
                var url = 'get_market_place_types_js';

                $.ajax({
                   type: 'GET',
                   async: false,
                   url: url,
                   dataType: 'json',
                   success : function(data) {
                    tree_data_json = data;
                   },
                   error: function(request, status) {
                       //console.log('AJAX error', status);
                   }
                 });

                var form_selected = [];
                $('#'+prop_id+' option:selected').each(function(){
                    form_selected[form_selected.length] = this.value;
                });
                var selected_nodes = [];
                $(tree_data_json).each(function(){
                    if ($.inArray(this.attributes.id, form_selected) != -1) {
                        selected_nodes[selected_nodes.length] = this.attributes.id;
                    }
                    $(this.children).each(function(){
                            if (this.attributes !== null && $.inArray(this.attributes.id, form_selected) != -1) {
                                selected_nodes[selected_nodes.length] = this.attributes.id;
                            }
                        });
                    });

                tree_data_json = {'data':config['translated_title'], 'children': tree_data_json, 'attributes': {'rel':'root'}};
                $('#'+prop_id+'_tree').tree({
                    selected : selected_nodes,
                    rules : {
                        multiple : 'on'
                    },
                    data : {
                        type : 'json',
                        opts : {
                            'static' : tree_data_json
                        }
                    },
                    ui : {
                         theme_name : "classic",
                         selected_parent_close : false
                    },
                    types : {
                        'default' :{
                            clickable : true,
                            renameable : false,
                            deletable : false,
                            creatable : false,
                            draggable : false
                        },
                        'root' : {
                            valid_children : ['node'],
                            clickable : false,
                            renameable : false,
                            deletable : false,
                            creatable : false,
                            draggable : false,
                            icon : {
                                image : '/misc_/NaayaCore/RefTree.gif'
                            }
                        },
                        'node' : {
                            valid_children : ['node'],
                            renameable : true,
                            max_depth : 2,
                            icon : {
                                image : '/misc_/NaayaCore/RefTreeNode.gif'
                            }
                        }
                    },
                    callback : {
                        onload : function(TREE_OBJ){
                            TREE_OBJ.open_all();
                        },
                        onselect : function(NODE, TREE_OBJ){
                            var node_id = TREE_OBJ.get_node(NODE).attr('id');
                            $('#'+prop_id+' option[value='+node_id+']').attr('selected', 'selected');
                        },
                        ondeselect : function(NODE, TREE_OBJ){
                            var node_id = TREE_OBJ.get_node(NODE).attr('id');
                            $('#'+prop_id+' option[value='+node_id+']').removeAttr('selected');
                        },
                        ondblclk : false
                    }
                });
            });
        }
    </script>
    <script tal:define="translation_id here/translation_id|here/title;
                        js_data python:{
                        'translated_title': here.getSite().getPortalI18n().get_translation(translation_id, here.title),
                        'prop_id': prop_id,
                        };
                    js_data_json python:here.rstk['json_dumps'](js_data)"
        tal:content="string:init_select_widget(${js_data_json})"></script>
    </metal:block>
    <metal:block fill-slot="input">
        <select tal:condition="python:selection_list is not None"
                tal:attributes="name string:${prop_id}:utf8:ustring:list;
                                id prop_id"
                multiple="multiple" size="5">
            <option tal:repeat="selection_item selection_list"
                tal:attributes="value selection_item/id;
                                selected python: selection_item['id'] in value"
                tal:content="selection_item/title" i18n:translate="" />
        </select>

        <div tal:attributes="id string:${prop_id}_tree"></div>

        <tal:block condition="python:selection_list is None">
        <p i18n:translate="">Missing selection list. Current values:</p>
        <ul>
            <tal:block tal:repeat="item value">
            <li tal:content="item" />
            <input type="hidden"
                   tal:attributes="name string:${prop_id}:utf8:ustring:list;
                                   value item" />
            </tal:block>
        </ul>
        </tal:block>
    </metal:block>
    <metal:block fill-slot="after">
        <div class="cleaner">&nbsp;</div>
    </metal:block>
</metal:block>
</tal:block>